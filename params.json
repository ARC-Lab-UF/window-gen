{"name":"Window Gen","tagline":"A Parallel Sliding-Window Generator for High-Performance Digital-Signal Processing on FPGAs","body":"### Summary\r\nThis project provides a highly configurable, portable, open-source (VHDL) sliding-window generator. The VHDL entity includes configuration options for image sizes, window sizes, data width, number of parallel windows, among others (see documentation). The image and window sizes can also be changed dynamically. Given an input image, the window generator will create a set of output windows that correspond to \"sliding\" the window across the image. This type of operation is common in many signal-processing applications (e.g., convolution). One of the main contributions of this project is support for any number of parallel windows.\r\n\r\nThis project provides the VHDL source code associated with the paper:\r\n\r\n_Greg Stitt, Eric Schwartz, Patrick Cooke. A Parallel Sliding-Window Generator for High-Performance Digital-Signal Processing on FPGAs, ACM Transactions on Reconfigurable Technology and Systems (TRETS): Special Issue on Reconfigurable Components with Source Code, _To Appear__\r\n\r\n**If you use this code in a project, we would appreciate a reference to this paper.**\r\n\r\n### Abstract\r\nSliding-window applications, an important class of the digital-signal processing domain, are highly\r\namenable to pipeline parallelism on field-programmable gate arrays (FPGAs). Although memory bandwidth\r\noften restricts parallelism for many applications, sliding-window applications can leverage custom buffers,\r\nreferred to as sliding-window generators, that provide massive input bandwidth that far exceeds the capa-\r\nbilities of external memory. Previous work has introduced a variety of sliding-window generators, but those\r\napproaches typically generate at most one window per cycle, which significantly restricts parallelism. In this\r\npaper, we address this limitation with a parallel sliding-window generator that can generate a configurable\r\nnumber of windows every cycle. Although in practice the number of parallel windows is limited by memory\r\nbandwidth, we show that even with common bandwidth limitations, the presented generator enables near-\r\nlinear speedups up to 16x faster than previous FPGA studies that generate a single window per cycle, which\r\nwere already in some cases faster than graphics-processing units (GPUs) and microprocessors.\r\n\r\n### Instructions\r\nPlease read the corresponding paper for usage instructions. The included README file also includes an explanation of the interface and configuration options.\r\n\r\n### Planned Extenstions\r\n* Support for VHDL 2008. The entity requires 2D unconstrained arrays (images) of an unconstrained type (pixel widths), which are supported in earlier versions of VHDL. As a workaround, the current version converts these arrays into large 1D vectors, which require specialized code for indexing.\r\n* Optimizations for specialized configuration options. For example, when generating a single window at a time, it is likely that some of the circuit can be eliminated. Similarly, when only using one image and/or window size, the functionality for dealing with different runtime sizes can be eliminated.\r\n\r\nFeel free to suggest extensions, or to commit them to the repository on your own. We hope for this entity to be widely used for FPGA-based signal-processing applications.\r\n\r\n### License\r\nThis project is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\n(at your option) any later version.\r\n\r\nwindow_gen is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU General Public License for more details.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}